Things to do:

*  profile/work-on efficiency
*  improve tests

*  --- add subvec to get a slice of the vector

* rethink iterators
   -- need to iterate on the values in a collection
   -- need to iterate on the ds structure itself (the nodes) (for class changes)

*  add clojure's destructuring if possible, then add `for` and `letd` (a destructuring version of let??) (or 'dlet' ??), and 'defund' (a destructuring version of defun?? (or defn?? ddefun??))
*

* hash maps need to be able to take 'nil as a value;
 -- right now the partition cons's the k with the nil which creates (k) rather than (k nil) :-(

-- redefine = as a defmacro????
-- identical?
-- max-key min-key
-- quot (quotient)
-- reductions
-- spit
-- subs
-- every-pred

-- ->
-- ->>
-- as->
-- cond->
-- cond->>
-- some->
-- some->>

-- fdef -- defines a new function definition based on a returned function/lambda/memoize etc

-- not-every?
-- not-any?

-- conj for all the different data types
-- contains? for all the things
-- find (maps) returns entire entry for k
-- shuffle
-- frequencies
-- replace

-- rseq ??

-- re-seq

-- distinct
-- distinct?
-- dedupe

-- split-at
-- split-with

-- when-first

-- rename value (entry) to val

-- loop/recur (no need for recur on fns)
